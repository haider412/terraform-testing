name: Terraform Module Emphemeral Test
run-name: Terraform Module Emphemeral Test (${{ github.ref }})

# Criteria for Execution
on: 
  workflow_dispatch:
  
  workflow_call:
      
# Required Permissions by GITHUB_TOKEN
permissions: 
  id-token: write
  contents: read
  pull-requests: write
  actions: read
  deployments: write

# Sequential Jobs for Execution
jobs:
  list-example-directories:
    name: Fetch Test Build Configurations
    runs-on: ubuntu-latest
    outputs:
        dirs: ${{ steps.list-example-directories.outputs.directories }}
    env:
      LOCAL_PATH: "examples"
      TARGET_DIR: "${GITHUB_WORKSPACE}/${LOCAL_PATH}"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: List example-directories
          id: list-example-directories
          run: |                
            # Initialize an empty list
            directories=()
            
            # List the names of example-directories
            for dir in "${{ env.TARGET_DIR }}"/*/; do
                  # Remove the trailing slash and add the directory name to the list
                directories+=("${{ env.LOCAL_PATH }}/$(basename "$dir")")
            done
            
            directories_json=$(printf '%s\n' "${directories[@]}" | jq -R . | jq -s .)
            echo "directories<<EOF" >> $GITHUB_OUTPUT
            echo "$directories_json" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT

  tfops:
    name: Terraform Ops
    needs: list-example-directories
    runs-on: ubuntu-latest
    env:
      TF_CLOUD_HOSTNAME: app.terraform.io
      TF_CLOUD_ORGANIZATION: first-organization47
      TF_API_TOKEN: ${{ secrets.MY_TFCLOUD_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        example: ${{ fromJSON(needs.list-example-directories.outputs.dirs) }}
    steps:
      - name: Checkout Configuration
        uses: actions/checkout@v4

      - name: Parse Workspace Name
        id: parse_workspace
        run: |
          # Replace all non-alphanumeric characters with a hyphen
          repo=$(echo "${{ github.repository }}" | sed "s/[^a-zA-Z0-9]/-/g")
          configuration=$(echo "${{ matrix.example }}" | sed "s/[^a-zA-Z0-9]/-/g" | tr '[:upper:]' '[:lower:]')
          echo "::set-output name=name::$(echo $repo | tr '[:upper:]' '[:lower:]')-${configuration}"    

      - name: Terraform Apply
        id: apply
        uses: dflook/terraform-apply@v1
        with:
          workspace: ${{ steps.parse_workspace.outputs.name }} -or-create
          variables: |
            working_directory = "${{ matrix.example }}"
            availability_zone_names = [
                "us-east-1a",
                "us-west-1c",
              ]
          #message: "Triggered by: [Actor: ${{ github.actor }}; Ref: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}]"
      
      - name: Terraform Destroy
        id: destroy
        uses: dflook/terraform-destroy@v1
        with:
          workspace: ${{ steps.parse_workspace.outputs.name }} -or-create
          variables: |
            working_directory = "${{ matrix.example }}"
            availability_zone_names = [
                "us-east-1a",
                "us-west-1c",
              ]
          #message: "Triggered by: [Actor: ${{ github.actor }}; Ref: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}]"
